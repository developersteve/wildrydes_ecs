export declare type LogSeverity = 'INFO' | 'WARNING' | 'FATAL' | 'DEBUG';
export declare type LogObject = {
    stack?: string;
    message?: string;
} & Record<any, any>;
export declare const LOG_LEVELS: Record<LogSeverity, LogSeverity>;
export interface LoggerInterface {
    info: (msg: string, obj?: object) => void;
    warn: (msg: string, obj?: object) => void;
    fatal: (msg: string, obj?: object) => void;
    log: (levelname: LogSeverity, msg: string, obj?: LogObject) => void;
    warnClient: (msg: string, obj?: LogObject) => boolean;
    debug: (msg: string, obj?: LogObject) => void;
    LOG_LEVELS: Record<LogSeverity, LogSeverity>;
}
export declare const LogStore: {
    addLog: (type: any, message: any, object: any) => void;
    clean: () => void;
};
export declare const setLogger: (logger: LoggerInterface) => LoggerInterface;
export declare const setLoggerPrefix: (prefix: string) => string;
export declare const getLogger: () => LoggerInterface;
