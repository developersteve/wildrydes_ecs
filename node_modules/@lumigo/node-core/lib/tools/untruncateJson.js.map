{"version":3,"file":"untruncateJson.js","sourceRoot":"","sources":["../../src/tools/untruncateJson.ts"],"names":[],"mappings":"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","sourcesContent":["// copied from https://www.npmjs.com/package/untruncate-json\nenum ContextType {\n  TOP_LEVEL = 'topLevel',\n  STRING = 'string',\n  STRING_ESCAPED = 'stringEscaped',\n  STRING_UNICODE = 'stringUnicode',\n  NUMBER = 'number',\n  NUMBER_NEEDS_DIGIT = 'numberNeedsDigit',\n  NUMBER_NEEDS_EXPONENT = 'numberNeedsExponent',\n  TRUE = 'true',\n  FALSE = 'false',\n  NULL = 'null',\n  ARRAY_NEEDS_VALUE = 'arrayNeedsValue',\n  ARRAY_NEEDS_COMMA = 'arrayNeedsComma',\n  OBJECT_NEEDS_KEY = 'objectNeedsKey',\n  OBJECT_NEEDS_COLON = 'objectNeedsColon',\n  OBJECT_NEEDS_VALUE = 'objectNeedsValue',\n  OBJECT_NEEDS_COMMA = 'objectNeedsComma',\n}\n\nenum RespawnReason {\n  STRING_ESCAPE = 'stringEscape',\n  COLLECTION_ITEM = 'collectionItem',\n}\n\nfunction isWhitespace(char: string): boolean {\n  return '\\u0020\\u000D\\u000A\\u0009'.indexOf(char) >= 0;\n}\n\nexport default function untruncateJson(json: string): string {\n  const contextStack: ContextType[] = [ContextType.TOP_LEVEL];\n  let position = 0;\n  let respawnPosition: number | undefined;\n  let respawnStackLength: number | undefined;\n  let respawnReason: RespawnReason | undefined;\n\n  const push = (context: ContextType) => contextStack.push(context);\n  const replace = (context: ContextType) => (contextStack[contextStack.length - 1] = context);\n  const setRespawn = (reason: RespawnReason) => {\n    if (respawnPosition == null) {\n      respawnPosition = position;\n      respawnStackLength = contextStack.length;\n      respawnReason = reason;\n    }\n  };\n  const clearRespawn = (reason: RespawnReason) => {\n    if (reason === respawnReason) {\n      respawnPosition = undefined;\n      respawnStackLength = undefined;\n      respawnReason = undefined;\n    }\n  };\n  const pop = () => contextStack.pop();\n  const dontConsumeCharacter = () => position--;\n\n  const startAny = (char: string) => {\n    if ('0' <= char && char <= '9') {\n      push(ContextType.NUMBER);\n      return;\n    }\n    switch (char) {\n      case '\"':\n        push(ContextType.STRING);\n        return;\n      case '-':\n        push(ContextType.NUMBER_NEEDS_DIGIT);\n        return;\n      case 't':\n        push(ContextType.TRUE);\n        return;\n      case 'f':\n        push(ContextType.FALSE);\n        return;\n      case 'n':\n        push(ContextType.NULL);\n        return;\n      case '[':\n        push(ContextType.ARRAY_NEEDS_VALUE);\n        return;\n      case '{':\n        push(ContextType.OBJECT_NEEDS_KEY);\n        return;\n    }\n  };\n\n  for (const { length } = json; position < length; position++) {\n    const char = json[position];\n    switch (contextStack[contextStack.length - 1]) {\n      case ContextType.TOP_LEVEL:\n        startAny(char);\n        break;\n      case ContextType.STRING:\n        switch (char) {\n          case '\"':\n            pop();\n            break;\n          case '\\\\':\n            setRespawn(RespawnReason.STRING_ESCAPE);\n            push(ContextType.STRING_ESCAPED);\n            break;\n        }\n        break;\n      case ContextType.STRING_ESCAPED:\n        if (char === 'u') {\n          push(ContextType.STRING_UNICODE);\n        } else {\n          clearRespawn(RespawnReason.STRING_ESCAPE);\n          pop();\n        }\n        break;\n      case ContextType.STRING_UNICODE:\n        if (position - json.lastIndexOf('u', position) === 4) {\n          clearRespawn(RespawnReason.STRING_ESCAPE);\n          pop();\n        }\n        break;\n      case ContextType.NUMBER:\n        if (char === '.') {\n          replace(ContextType.NUMBER_NEEDS_DIGIT);\n        } else if (char === 'e' || char === 'E') {\n          replace(ContextType.NUMBER_NEEDS_EXPONENT);\n        } else if (char < '0' || char > '9') {\n          dontConsumeCharacter();\n          pop();\n        }\n        break;\n      case ContextType.NUMBER_NEEDS_DIGIT:\n        replace(ContextType.NUMBER);\n        break;\n      case ContextType.NUMBER_NEEDS_EXPONENT:\n        if (char === '+' || char === '-') {\n          replace(ContextType.NUMBER_NEEDS_DIGIT);\n        } else {\n          replace(ContextType.NUMBER);\n        }\n        break;\n      case ContextType.TRUE:\n      case ContextType.FALSE:\n      case ContextType.NULL:\n        if (char < 'a' || char > 'z') {\n          dontConsumeCharacter();\n          pop();\n        }\n        break;\n      case ContextType.ARRAY_NEEDS_VALUE:\n        if (char === ']') {\n          pop();\n        } else if (!isWhitespace(char)) {\n          clearRespawn(RespawnReason.COLLECTION_ITEM);\n          replace(ContextType.ARRAY_NEEDS_COMMA);\n          startAny(char);\n        }\n        break;\n      case ContextType.ARRAY_NEEDS_COMMA:\n        if (char === ']') {\n          pop();\n        } else if (char === ',') {\n          setRespawn(RespawnReason.COLLECTION_ITEM);\n          replace(ContextType.ARRAY_NEEDS_VALUE);\n        }\n        break;\n      case ContextType.OBJECT_NEEDS_KEY:\n        if (char === '}') {\n          pop();\n        } else if (char === '\"') {\n          setRespawn(RespawnReason.COLLECTION_ITEM);\n          replace(ContextType.OBJECT_NEEDS_COLON);\n          push(ContextType.STRING);\n        }\n        break;\n      case ContextType.OBJECT_NEEDS_COLON:\n        if (char === ':') {\n          replace(ContextType.OBJECT_NEEDS_VALUE);\n        }\n        break;\n      case ContextType.OBJECT_NEEDS_VALUE:\n        if (!isWhitespace(char)) {\n          clearRespawn(RespawnReason.COLLECTION_ITEM);\n          replace(ContextType.OBJECT_NEEDS_COMMA);\n          startAny(char);\n        }\n        break;\n      case ContextType.OBJECT_NEEDS_COMMA:\n        if (char === '}') {\n          pop();\n        } else if (char === ',') {\n          setRespawn(RespawnReason.COLLECTION_ITEM);\n          replace(ContextType.OBJECT_NEEDS_KEY);\n        }\n        break;\n    }\n  }\n\n  if (respawnStackLength != null) {\n    contextStack.length = respawnStackLength;\n  }\n  const result = [respawnPosition != null ? json.slice(0, respawnPosition) : json];\n  const finishWord = (word: string) =>\n    result.push(word.slice(json.length - json.lastIndexOf(word[0])));\n  for (let i = contextStack.length - 1; i >= 0; i--) {\n    switch (contextStack[i]) {\n      case ContextType.STRING:\n        result.push('\"');\n        break;\n      case ContextType.NUMBER_NEEDS_DIGIT:\n      case ContextType.NUMBER_NEEDS_EXPONENT:\n        result.push('0');\n        break;\n      case ContextType.TRUE:\n        finishWord('true');\n        break;\n      case ContextType.FALSE:\n        finishWord('false');\n        break;\n      case ContextType.NULL:\n        finishWord('null');\n        break;\n      case ContextType.ARRAY_NEEDS_VALUE:\n      case ContextType.ARRAY_NEEDS_COMMA:\n        result.push(']');\n        break;\n      case ContextType.OBJECT_NEEDS_KEY:\n      case ContextType.OBJECT_NEEDS_COLON:\n      case ContextType.OBJECT_NEEDS_VALUE:\n      case ContextType.OBJECT_NEEDS_COMMA:\n        result.push('}');\n        break;\n    }\n  }\n  return result.join('');\n}\n"]}