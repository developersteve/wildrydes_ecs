{"version":3,"file":"secrets.js","sourceRoot":"","sources":["../../src/common/secrets.ts"],"names":[],"mappings":";;;AAAA,sCAAsC;AACtC,oCAWkB;AAElB,IAAY,YAQX;AARD,WAAY,YAAY;IACtB,qDAAO,CAAA;IACP,yEAAiB,CAAA;IACjB,+EAAoB,CAAA;IACpB,2EAAkB,CAAA;IAClB,2EAAkB,CAAA;IAClB,iFAAqB,CAAA;IACrB,6EAAmB,CAAA;AACrB,CAAC,EARW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAQvB;AAMD,MAAM,sCAAsC;IAG1C,YAAY,kBAA2B;QACrC,IAAI,YAAoB,CAAC;QACzB,IAAI,kBAAkB,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;YACzD,YAAY,GAAG,kBAAkB,CAAC;SACnC;aAAM,IAAI,OAAO,CAAC,GAAG,CAAC,mCAA2B,CAAC,EAAE;YACnD,YAAY,GAAG,mCAA2B,CAAC;SAC5C;aAAM,IAAI,OAAO,CAAC,GAAG,CAAC,iDAAyC,CAAC,EAAE;YACjE,YAAY,GAAG,iDAAyC,CAAC;SAC1D;QAED,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9D,IAAI,iBAAiB,GAAa,6BAAqB,CAAC;QAExD,IAAI,OAAO,KAAK,uCAA+B,EAAE;YAC/C,iBAAiB,GAAG,CAAC,IAAI,CAAC,CAAC;SAC5B;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI;gBACF,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAa,CAAC;aACrD;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAA,kBAAS,GAAE,CAAC,IAAI,CACd,uCAAuC,OAAO,iBAAiB,YAAY,0BAA0B;oBACnG,uGAAuG;oBACvG,6BAA6B,6BAAqB,GAAG,CACxD,CAAC;aACH;SACF;QAED,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9E,CAAC;CACF;AAEY,QAAA,+BAA+B,GAAG,IAAI,sCAAsC,CACvF,uDAA+C,CAChD,CAAC;AAEW,QAAA,gCAAgC,GAAG,IAAI,sCAAsC,CACxF,wDAAgD,CACjD,CAAC;AAEW,QAAA,gCAAgC,GAAG,IAAI,sCAAsC,CACxF,wDAAgD,CACjD,CAAC;AAEW,QAAA,iCAAiC,GAAG,IAAI,sCAAsC,CACzF,yDAAiD,CAClD,CAAC;AAEW,QAAA,6BAA6B,GAAG,IAAI,sCAAsC,CACrF,qDAA6C,CAC9C,CAAC;AAEW,QAAA,gCAAgC,GAAG,IAAI,sCAAsC,CACxF,+CAAuC,CACxC,CAAC;AAEW,QAAA,qBAAqB,GAAG,IAAI,sCAAsC,EAAE,CAAC","sourcesContent":["import { getLogger } from '../logger';\nimport {\n  LUMIGO_SECRET_MASKING_REGEX,\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_BODIES,\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_HEADERS,\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_BODIES,\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_HEADERS,\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_QUERY_PARAMS,\n  LUMIGO_SECRET_MASKING_REGEX_ENVIRONMENT,\n  LUMIGO_SECRET_MASKING_ALL_MAGIC,\n  LUMIGO_SECRET_MASKING_REGEX_BACKWARD_COMP,\n  OMITTING_KEYS_REGEXES,\n} from '../utils';\n\nexport enum ScrubContext {\n  DEFAULT,\n  HTTP_REQUEST_BODY,\n  HTTP_REQUEST_HEADERS,\n  HTTP_REQUEST_QUERY,\n  HTTP_RESPONSE_BODY,\n  HTTP_RESPONSE_HEADERS,\n  PROCESS_ENVIRONMENT,\n}\n\nexport interface SecretScrubber {\n  readonly expressions: RegExp[];\n}\n\nclass EnvironmentVariableBasedSecretScrubber implements SecretScrubber {\n  readonly expressions: RegExp[];\n\n  constructor(overrideEnvVarName?: string) {\n    let sourceEnvVar: string;\n    if (overrideEnvVarName && process.env[overrideEnvVarName]) {\n      sourceEnvVar = overrideEnvVarName;\n    } else if (process.env[LUMIGO_SECRET_MASKING_REGEX]) {\n      sourceEnvVar = LUMIGO_SECRET_MASKING_REGEX;\n    } else if (process.env[LUMIGO_SECRET_MASKING_REGEX_BACKWARD_COMP]) {\n      sourceEnvVar = LUMIGO_SECRET_MASKING_REGEX_BACKWARD_COMP;\n    }\n\n    const regExps = sourceEnvVar ? process.env[sourceEnvVar] : '';\n    let expressionStrings: string[] = OMITTING_KEYS_REGEXES;\n\n    if (regExps === LUMIGO_SECRET_MASKING_ALL_MAGIC) {\n      expressionStrings = ['.*'];\n    } else if (regExps) {\n      try {\n        expressionStrings = JSON.parse(regExps) as string[];\n      } catch (err) {\n        getLogger().warn(\n          `Failed to parse the masking regex: '${regExps}' set in the '${sourceEnvVar}' environment variable; ` +\n            'it must either be \"all\" or a stringified JSON array of regular expressions, e.g.: \\'[\"a.*\",\"b.*\"]\\'. ' +\n            `Falling back to default: '${OMITTING_KEYS_REGEXES}'`\n        );\n      }\n    }\n\n    this.expressions = expressionStrings.map((e: string) => new RegExp(e, 'i'));\n  }\n}\n\nexport const httpRequestBodiesSecretScrubber = new EnvironmentVariableBasedSecretScrubber(\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_BODIES\n);\n\nexport const httpRequestHeadersSecretScrubber = new EnvironmentVariableBasedSecretScrubber(\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_HEADERS\n);\n\nexport const httpResponseBodiesSecretScrubber = new EnvironmentVariableBasedSecretScrubber(\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_BODIES\n);\n\nexport const httpResponseHeadersSecretScrubber = new EnvironmentVariableBasedSecretScrubber(\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_HEADERS\n);\n\nexport const httpQueryParamsSecretScrubber = new EnvironmentVariableBasedSecretScrubber(\n  LUMIGO_SECRET_MASKING_REGEX_HTTP_QUERY_PARAMS\n);\n\nexport const processEnvironmentSecretScrubber = new EnvironmentVariableBasedSecretScrubber(\n  LUMIGO_SECRET_MASKING_REGEX_ENVIRONMENT\n);\n\nexport const defaultSecretScrubber = new EnvironmentVariableBasedSecretScrubber();\n"]}