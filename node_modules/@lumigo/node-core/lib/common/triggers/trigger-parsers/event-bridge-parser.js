"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventBridgeMessageParser = void 0;
const trigger_parser_base_1 = require("./trigger-parser-base");
const generalUtils_1 = require("../../generalUtils");
const message_trigger_enum_1 = require("../message-trigger.enum");
class EventBridgeMessageParser extends trigger_parser_base_1.MessageTriggerParser {
    constructor() {
        super(...arguments);
        this.INNER_IDENTIFIER = 'detail-type';
        this._shouldHandle = (message) => {
            return (typeof (message === null || message === void 0 ? void 0 : message.version) === 'string' &&
                typeof (message === null || message === void 0 ? void 0 : message.id) === 'string' &&
                typeof (message === null || message === void 0 ? void 0 : message['detail-type']) === 'string' &&
                typeof (message === null || message === void 0 ? void 0 : message.source) === 'string' &&
                typeof (message === null || message === void 0 ? void 0 : message.time) === 'string' &&
                typeof (message === null || message === void 0 ? void 0 : message.region) === 'string' &&
                Array.isArray(message === null || message === void 0 ? void 0 : message.resources) &&
                typeof (message === null || message === void 0 ? void 0 : message.detail) === 'object');
        };
        this.handle = (message, targetId) => {
            return {
                id: (0, generalUtils_1.getRandomId)(),
                targetId: targetId,
                triggeredBy: message_trigger_enum_1.MessageTrigger.EventBridge,
                fromMessageIds: [message.id],
            };
        };
    }
}
exports.EventBridgeMessageParser = EventBridgeMessageParser;
//# sourceMappingURL=event-bridge-parser.js.map