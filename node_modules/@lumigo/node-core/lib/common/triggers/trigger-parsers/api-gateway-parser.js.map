{"version":3,"file":"api-gateway-parser.js","sourceRoot":"","sources":["../../../../src/common/triggers/trigger-parsers/api-gateway-parser.ts"],"names":[],"mappings":";;;AACA,+DAA6D;AAC7D,qDAAiD;AACjD,kEAAyD;AAEzD,MAAa,uBAAwB,SAAQ,0CAAoB;IAAjE;;QACE,kBAAa,GAAG,CAAC,OAAwB,EAAW,EAAE;;YACpD,OAAO,CACL,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,YAAY,CAAC,MAAI,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,gBAAgB,CAAC,0CAAG,OAAO,CAAC,CAAA,CAAC;gBACnE,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,SAAS,CAAC;oBACnB,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,SAAS,CAAC,MAAK,KAAK;qBAC9B,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,gBAAgB,CAAC,0CAAG,OAAO,CAAC,CAAA,CAAC,CAC1C,CAAC;QACJ,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,OAAwB,EAAE,QAAuB,EAAW,EAAE;YACtE,MAAM,OAAO,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,SAAS,CAAC,CAAC;YAErC,IAAI,OAAO,KAAK,KAAK,EAAE;gBACrB,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aACpD;YAED,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACrD,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,OAAwB,EAAE,QAAuB,EAAW,EAAE;YACnF,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;YAClE,MAAM,EAAE,KAAK,EAAE,GAAG,cAAc,CAAC;YAEjC,MAAM,GAAG,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,KAAI,IAAI,CAAC;YAClC,MAAM,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;YAE3C,OAAO;gBACL,EAAE,EAAE,IAAA,0BAAW,GAAE;gBACjB,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,qCAAc,CAAC,UAAU;gBACtC,cAAc,EAAE,CAAC,SAAS,CAAC;gBAC3B,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE;aAC5C,CAAC;QACJ,CAAC,CAAC;QAEF,wBAAmB,GAAG,CAAC,OAAwB,EAAE,QAAuB,EAAW,EAAE;;YACnF,MAAM,UAAU,GAAG,MAAA,MAAA,OAAO,CAAC,cAAc,0CAAE,IAAI,0CAAE,MAAM,CAAC;YACxD,MAAM,QAAQ,GAAG,MAAA,MAAA,OAAO,CAAC,cAAc,0CAAE,IAAI,0CAAE,IAAI,CAAC;YACpD,MAAM,SAAS,GAAG,MAAA,OAAO,CAAC,cAAc,0CAAE,SAAS,CAAC;YACpD,MAAM,GAAG,GAAG,CAAA,MAAA,OAAO,CAAC,cAAc,0CAAE,UAAU,KAAI,IAAI,CAAC;YACvD,MAAM,KAAK,GAAG,CAAA,MAAA,OAAO,CAAC,cAAc,0CAAE,KAAK,KAAI,SAAS,CAAC;YAEzD,OAAO;gBACL,EAAE,EAAE,IAAA,0BAAW,GAAE;gBACjB,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,qCAAc,CAAC,UAAU;gBACtC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC5C,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE;aAC5C,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CAAA;AAnDD,0DAmDC","sourcesContent":["import { IncomingMessage, Trigger } from '../trigger-data.types';\nimport { MessageTriggerParser } from './trigger-parser-base';\nimport { getRandomId } from '../../generalUtils';\nimport { MessageTrigger } from '../message-trigger.enum';\n\nexport class ApiGatewayMessageParser extends MessageTriggerParser {\n  _shouldHandle = (message: IncomingMessage): boolean => {\n    return (\n      (message?.['httpMethod'] && message?.['requestContext']?.['stage']) ||\n      (message?.['headers'] &&\n        message?.['version'] === '2.0' &&\n        message?.['requestContext']?.['stage'])\n    );\n  };\n\n  handle = (message: IncomingMessage, targetId: string | null): Trigger => {\n    const version = message?.['version'];\n\n    if (version === '2.0') {\n      return this.getApiGatewayV2Data(message, targetId);\n    }\n\n    return this.getApiGatewayV1Data(message, targetId);\n  };\n\n  getApiGatewayV1Data = (message: IncomingMessage, targetId: string | null): Trigger => {\n    const { headers, resource, httpMethod, requestContext } = message;\n    const { stage } = requestContext;\n\n    const api = headers?.Host || null;\n    const messageId = requestContext.requestId;\n\n    return {\n      id: getRandomId(),\n      targetId: targetId,\n      triggeredBy: MessageTrigger.ApiGateway,\n      fromMessageIds: [messageId],\n      extra: { api, stage, httpMethod, resource },\n    };\n  };\n\n  getApiGatewayV2Data = (message: IncomingMessage, targetId: string | null): Trigger => {\n    const httpMethod = message.requestContext?.http?.method;\n    const resource = message.requestContext?.http?.path;\n    const messageId = message.requestContext?.requestId;\n    const api = message.requestContext?.domainName || null;\n    const stage = message.requestContext?.stage || 'unknown';\n\n    return {\n      id: getRandomId(),\n      targetId: targetId,\n      triggeredBy: MessageTrigger.ApiGateway,\n      fromMessageIds: messageId ? [messageId] : [],\n      extra: { api, stage, httpMethod, resource },\n    };\n  };\n}\n"]}