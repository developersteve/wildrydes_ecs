{"version":3,"file":"appsync-parser.js","sourceRoot":"","sources":["../../../../src/common/triggers/trigger-parsers/appsync-parser.ts"],"names":[],"mappings":";;;AACA,+DAA6D;AAC7D,qDAAiD;AACjD,kEAAyD;AAEzD,MAAa,oBAAqB,SAAQ,0CAAoB;IAA9D;;QACE,kBAAa,GAAG,CAAC,OAAwB,EAAW,EAAE;;YACpD,OAAO,MAAA,MAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,0CAAE,OAAO,0CAAE,IAAI,0CAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;QAClE,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,OAAwB,EAAE,QAAuB,EAAW,EAAE;YACtE,MAAM,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;YACrE,OAAO;gBACL,EAAE,EAAE,IAAA,0BAAW,GAAE;gBACjB,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,qCAAc,CAAC,OAAO;gBACnC,cAAc,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,KAAK,EAAE;oBACL,GAAG,EAAE,IAAI;iBACV;aACF,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CAAA;AAjBD,oDAiBC","sourcesContent":["import { IncomingMessage, Trigger } from '../trigger-data.types';\nimport { MessageTriggerParser } from './trigger-parser-base';\nimport { getRandomId } from '../../generalUtils';\nimport { MessageTrigger } from '../message-trigger.enum';\n\nexport class AppSyncMessageParser extends MessageTriggerParser {\n  _shouldHandle = (message: IncomingMessage): boolean => {\n    return message?.request?.headers?.host?.includes('appsync-api');\n  };\n\n  handle = (message: IncomingMessage, targetId: string | null): Trigger => {\n    const { host, 'x-amzn-trace-id': traceId } = message.request.headers;\n    return {\n      id: getRandomId(),\n      targetId: targetId,\n      triggeredBy: MessageTrigger.AppSync,\n      fromMessageIds: [traceId.split('=')[1]],\n      extra: {\n        api: host,\n      },\n    };\n  };\n}\n"]}