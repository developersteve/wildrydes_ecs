"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamodbMessageParser = void 0;
const trigger_parser_base_1 = require("./trigger-parser-base");
const generalUtils_1 = require("../../generalUtils");
const message_trigger_enum_1 = require("../message-trigger.enum");
class DynamodbMessageParser extends trigger_parser_base_1.MessageTriggerParser {
    constructor() {
        super(...arguments);
        this._shouldHandle = (message) => {
            var _a, _b;
            return ((_b = (_a = message === null || message === void 0 ? void 0 : message.Records) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.eventSource) === 'aws:dynamodb';
        };
        this.handle = (message, targetId) => {
            var _a, _b, _c, _d, _e, _f;
            const arn = (_b = (_a = message === null || message === void 0 ? void 0 : message.Records) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.eventSourceARN;
            const approxEventCreationTime = (((_e = (_d = (_c = message === null || message === void 0 ? void 0 : message.Records) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.dynamodb) === null || _e === void 0 ? void 0 : _e.ApproximateCreationDateTime) || 0) * 1000;
            const messageIds = (_f = message === null || message === void 0 ? void 0 : message.Records) === null || _f === void 0 ? void 0 : _f.map((record) => {
                var _a;
                if (['MODIFY', 'REMOVE'].includes(record.eventName) && ((_a = record === null || record === void 0 ? void 0 : record.dynamodb) === null || _a === void 0 ? void 0 : _a.Keys)) {
                    return (0, generalUtils_1.md5Hash)(record.dynamodb.Keys);
                }
                else if (record.eventName === 'INSERT' && record.dynamodb && record.dynamodb.NewImage) {
                    return (0, generalUtils_1.md5Hash)(record.dynamodb.NewImage);
                }
            }).filter((hashedRecordContent) => hashedRecordContent != null);
            return {
                id: (0, generalUtils_1.getRandomId)(),
                targetId: targetId,
                triggeredBy: message_trigger_enum_1.MessageTrigger.DynamoDB,
                fromMessageIds: messageIds,
                extra: {
                    arn,
                    approxEventCreationTime,
                },
            };
        };
    }
}
exports.DynamodbMessageParser = DynamodbMessageParser;
//# sourceMappingURL=dynamodb-parser.js.map