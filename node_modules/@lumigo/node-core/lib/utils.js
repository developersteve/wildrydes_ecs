"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.safeExecute = exports.parseJsonFromEnvVar = exports.getEventEntitySize = exports.LUMIGO_MAX_ENTRY_SIZE = exports.isWarm = exports.setWarm = exports.setDebug = exports.isDebug = exports.setStoreLogsOn = exports.isStoreLogs = exports.isString = exports.OMITTING_KEYS_REGEXES = exports.LUMIGO_WHITELIST_KEYS_REGEXES = exports.LUMIGO_SECRET_MASKING_ALL_MAGIC = exports.LUMIGO_SECRET_MASKING_REGEX_ENVIRONMENT = exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_QUERY_PARAMS = exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_HEADERS = exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_BODIES = exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_HEADERS = exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_BODIES = exports.LUMIGO_SECRET_MASKING_REGEX = exports.LUMIGO_SECRET_MASKING_REGEX_BACKWARD_COMP = void 0;
const logger_1 = require("./logger");
const DEBUG_FLAG = 'LUMIGO_DEBUG';
const STORE_LOGS_FLAG = 'LUMIGO_STORE_LOGS';
const WARM_FLAG = 'LUMIGO_IS_WARM';
exports.LUMIGO_SECRET_MASKING_REGEX_BACKWARD_COMP = 'LUMIGO_BLACKLIST_REGEX';
exports.LUMIGO_SECRET_MASKING_REGEX = 'LUMIGO_SECRET_MASKING_REGEX';
exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_BODIES = 'LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_BODIES';
exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_HEADERS = 'LUMIGO_SECRET_MASKING_REGEX_HTTP_REQUEST_HEADERS';
exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_BODIES = 'LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_BODIES';
exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_HEADERS = 'LUMIGO_SECRET_MASKING_REGEX_HTTP_RESPONSE_HEADERS';
exports.LUMIGO_SECRET_MASKING_REGEX_HTTP_QUERY_PARAMS = 'LUMIGO_SECRET_MASKING_REGEX_HTTP_QUERY_PARAMS';
exports.LUMIGO_SECRET_MASKING_REGEX_ENVIRONMENT = 'LUMIGO_SECRET_MASKING_REGEX_ENVIRONMENT';
exports.LUMIGO_SECRET_MASKING_ALL_MAGIC = 'all';
exports.LUMIGO_WHITELIST_KEYS_REGEXES = 'LUMIGO_WHITELIST_KEYS_REGEXES';
exports.OMITTING_KEYS_REGEXES = [
    '.*pass.*',
    '.*key.*',
    '.*secret.*',
    '.*credential.*',
    '.*passphrase.*',
    '.*token.*',
    'SessionToken',
    'x-amz-security-token',
    'Signature',
    'Credential',
    'Authorization',
];
function isString(x) {
    return Object.prototype.toString.call(x) === '[object String]';
}
exports.isString = isString;
const isStoreLogs = () => validateEnvVar(STORE_LOGS_FLAG);
exports.isStoreLogs = isStoreLogs;
const validateEnvVar = (envVar, value = 'TRUE') => !!(process.env[envVar] && process.env[envVar].toUpperCase() === value.toUpperCase());
const setStoreLogsOn = () => (process.env[STORE_LOGS_FLAG] = 'TRUE');
exports.setStoreLogsOn = setStoreLogsOn;
const isDebug = () => validateEnvVar(DEBUG_FLAG);
exports.isDebug = isDebug;
const setDebug = () => (process.env['LUMIGO_DEBUG'] = 'TRUE');
exports.setDebug = setDebug;
const setWarm = () => (process.env[WARM_FLAG] = 'TRUE');
exports.setWarm = setWarm;
const isWarm = () => validateEnvVar(WARM_FLAG);
exports.isWarm = isWarm;
exports.LUMIGO_MAX_ENTRY_SIZE = 2048;
const getEventEntitySize = (hasError = false) => {
    const basicSize = parseInt(process.env['MAX_EVENT_ENTITY_SIZE']) ||
        parseInt(process.env['LUMIGO_MAX_ENTRY_SIZE']) ||
        exports.LUMIGO_MAX_ENTRY_SIZE;
    if (hasError) {
        return basicSize * 2;
    }
    return basicSize;
};
exports.getEventEntitySize = getEventEntitySize;
const parseJsonFromEnvVar = (envVar, warnClient = false, defaultReturnValue) => {
    try {
        return JSON.parse(process.env[envVar]);
    }
    catch (e) {
        warnClient && (0, logger_1.getLogger)().warnClient(`${envVar} need to be a valid JSON`);
    }
    return defaultReturnValue;
};
exports.parseJsonFromEnvVar = parseJsonFromEnvVar;
function safeExecute(callback, message = 'Error in Lumigo tracer', logLevel = (0, logger_1.getLogger)().LOG_LEVELS.WARNING, defaultReturn = undefined) {
    return function (...args) {
        try {
            return callback.apply(this, args);
        }
        catch (err) {
            (0, logger_1.getLogger)().log(logLevel, message, err);
            return defaultReturn;
        }
    };
}
exports.safeExecute = safeExecute;
//# sourceMappingURL=utils.js.map