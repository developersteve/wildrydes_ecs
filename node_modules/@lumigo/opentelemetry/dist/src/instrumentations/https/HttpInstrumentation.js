"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const instrumentation_http_1 = require("@opentelemetry/instrumentation-http");
const http_1 = require("./http");
const instrumentor_1 = require("../instrumentor");
class LumigoHttpInstrumentation extends instrumentor_1.Instrumentor {
    constructor(...ignoredHostnames) {
        super();
        this.getInstrumentedModule = () => 'http';
        this.getInstrumentation = () => new instrumentation_http_1.HttpInstrumentation({
            ignoreOutgoingRequestHook: (request) => {
                /*
                 * Some requests, like towards the ECS Credentials endpoints, do not have the
                 * hostname set, but they do have the host
                 */
                const requestHostname = request.hostname || request.host;
                const isRequestIgnored = this.ignoredHostnames.includes(requestHostname) ||
                    // Unroutable addresses, used by metadata and credential services on all clouds
                    /169\.254\.\d+\.\d+.*/gm.test(requestHostname);
                return isRequestIgnored;
            },
            requestHook: http_1.HttpHooks.requestHook,
            responseHook: http_1.HttpHooks.responseHook,
        });
        this.ignoredHostnames = (ignoredHostnames || []).concat([process.env.ECS_CONTAINER_METADATA_URI, process.env.ECS_CONTAINER_METADATA_URI_V4]
            .filter(Boolean)
            .map((url) => {
            try {
                return new URL(url).hostname;
            }
            catch (err) {
                return;
            }
        }));
    }
}
exports.default = LumigoHttpInstrumentation;
//# sourceMappingURL=HttpInstrumentation.js.map