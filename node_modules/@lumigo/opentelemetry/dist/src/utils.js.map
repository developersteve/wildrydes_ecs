{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as crypto from 'crypto';\nimport * as http from 'http';\nimport * as https from 'https';\n\nimport { logger } from './logging';\nimport { sortify } from './tools/jsonSortify';\n\nconst DEFAULT_MAX_ENTRY_SIZE = 2048;\nexport const DEFAULT_CONNECTION_TIMEOUT = 5000;\n\ninterface HttpHeaders {\n  [key: string]: string;\n}\n\nexport function safeExecute<T>(\n  callback: Function,\n  message = 'Error in Lumigo tracer',\n  defaultReturn: T = undefined\n): Function {\n  return function (...args) {\n    try {\n      return callback.apply(this, args);\n    } catch (err) {\n      logger.debug(message, err);\n      return defaultReturn;\n    }\n  };\n}\n\nexport const isEncodingType = (encodingType): boolean =>\n  !!(\n    encodingType &&\n    typeof encodingType === 'string' &&\n    ['ascii', 'utf8', 'utf16le', 'ucs2', 'base64', 'binary', 'hex'].includes(encodingType)\n  );\n\nexport const runOneTimeWrapper = (func: Function, context: any = undefined): Function => {\n  let done = false;\n  return (...args) => {\n    if (!done) {\n      const result = func.apply(context || this, args);\n      done = true;\n      return result;\n    }\n  };\n};\n\nexport const getConnectionTimeout = () => {\n  return parseInt(process.env['LUMIGO_CONNECTION_TIMEOUT']) || DEFAULT_CONNECTION_TIMEOUT;\n};\n\nexport const getProtocolModuleForUri = (uri: string) => {\n  return uri.indexOf('https') === 0 ? https : http;\n};\n\n/**\n * This function return the environment variables by total max size of the values of each environment variable key.\n * For example: if max size=2, environment variables ={\"key_1\": \"value1\", \"key_2\": \"value_2\"}, return {\"key_1\": \"value1\"}.\n */\nexport const extractEnvVars = () => {\n  const res = {};\n  const maxSize = getMaxSize();\n  let length = 0;\n  Object.entries(process.env).forEach(([key, value]) => {\n    if (length + value.length <= maxSize) {\n      res[key] = value;\n      length += value.length;\n    }\n  });\n  return res;\n};\n\nexport const postUri = async (\n  url: string,\n  data: Object,\n  headers: HttpHeaders = {}\n): Promise<Object> => {\n  const jsonData = JSON.stringify(data);\n\n  headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  headers['Content-Length'] = String(jsonData.length);\n\n  const parsedUrl = new URL(url);\n\n  const responseBody = await new Promise((resolve, reject) => {\n    const request = getProtocolModuleForUri(url).request(\n      {\n        method: 'POST',\n        protocol: parsedUrl.protocol,\n        hostname: parsedUrl.hostname,\n        port: parsedUrl.port,\n        path: parsedUrl.pathname,\n        headers,\n      },\n      (response) => {\n        if (response.statusCode >= 400) {\n          reject(`Request to '${url}' failed with status ${response.statusCode}`);\n        }\n        let responseBody = '';\n        response.on('data', (chunk) => (responseBody += chunk.toString()));\n        // All the data has been read, resolve the Promise\n        response.on('end', () => resolve(responseBody));\n      }\n    );\n    // Set an aggressive timeout to prevent lock-ups\n    request.setTimeout(getConnectionTimeout(), () => {\n      request.destroy();\n    });\n    // Connection error, disconnection, etc.\n    request.on('error', reject);\n    request.write(jsonData);\n    request.end();\n  });\n\n  return JSON.parse(responseBody.toString());\n};\n\nexport const getUri = async (uri: string): Promise<Object> => {\n  const responseBody = await new Promise((resolve, reject) => {\n    const request = getProtocolModuleForUri(uri).get(uri, (response) => {\n      if (response.statusCode >= 400) {\n        reject(`Request to '${uri}' failed with status ${response.statusCode}`);\n      }\n      /*\n       * Concatenate the response out of chunks:\n       * https://nodejs.org/api/stream.html#stream_event_data\n       */\n      let responseBody = '';\n      response.on('data', (chunk) => (responseBody += chunk.toString()));\n      // All the data has been read, resolve the Promise\n      response.on('end', () => resolve(responseBody));\n    });\n    // Set an aggressive timeout to prevent lock-ups\n    request.setTimeout(getConnectionTimeout(), () => {\n      request.destroy();\n    });\n    // Connection error, disconnection, etc.\n    request.on('error', reject);\n    request.end();\n  });\n\n  return JSON.parse(responseBody.toString());\n};\n\nexport const safeGet = (obj, arr, dflt = null) => {\n  let current = obj;\n  for (const i in arr) {\n    if (!current) {\n      return dflt;\n    }\n    current = current[arr[i]];\n  }\n  return current || dflt;\n};\n\nexport const isAwsService = (host, responseData = undefined): boolean => {\n  if (host && host.includes('amazonaws.com')) {\n    return true;\n  }\n  return !!(\n    responseData &&\n    responseData.headers &&\n    (responseData.headers['x-amzn-requestid'] || responseData.headers['x-amz-request-id'])\n  );\n};\n\nexport const parseQueryParams = (queryParams) => {\n  return safeExecute(() => {\n    if (typeof queryParams !== 'string') return {};\n    const obj = {};\n    queryParams.replace(\n      /([^=&]+)=([^&]*)/g,\n      // @ts-ignore\n      safeExecute((m, key, value) => {\n        obj[decodeURIComponent(key)] = decodeURIComponent(value);\n      }, 'Failed to parse a specific key in parseQueryParams')\n    );\n    return obj;\n  }, 'Failed to parse query params')();\n};\n\nexport const md5Hash = (item: {}): string | undefined => {\n  try {\n    const md5sum = crypto.createHash('md5');\n    md5sum.update(sortify(item));\n    return md5sum.digest('hex');\n  } catch (err) {\n    logger.debug('Failed to hash item', err);\n    return undefined;\n  }\n};\n\n// @ts-ignore\nexport const removeDuplicates = (arr) => Array.from(new Set(arr));\n\nexport const canRequireModule = (libId) => {\n  const customReq =\n    // eslint-disable-next-line no-undef,camelcase\n    // @ts-ignore __non_webpack_require__ not available at compile time\n    typeof __non_webpack_require__ !== 'undefined' ? __non_webpack_require__ : require;\n\n  try {\n    return !!customReq.resolve(libId);\n  } catch (e) {\n    try {\n      return !!customReq.resolve(libId, {\n        paths: (process.env.NODE_PATH || '').split(':'),\n      });\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND') {\n        logger.warn('Unable to resolve module', {\n          error: e,\n          libId: libId,\n        });\n      }\n    }\n  }\n  return false;\n};\n\nexport const safeRequire = (libId) => {\n  const customReq =\n    // eslint-disable-next-line no-undef,camelcase\n    // @ts-ignore __non_webpack_require__ not available at compile time\n    typeof __non_webpack_require__ !== 'undefined' ? __non_webpack_require__ : require;\n\n  try {\n    return customReq(libId);\n  } catch (e) {\n    try {\n      const path = customReq.resolve(libId, {\n        paths: (process.env.NODE_PATH || '').split(':'),\n      });\n      return customReq(path);\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND') {\n        logger.warn('Unable to load module', {\n          error: e,\n          libId: libId,\n        });\n      }\n    }\n  }\n  return undefined;\n};\n\nexport const getMaxSize = () => {\n  return (\n    parseInt(process.env.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT) ||\n    parseInt(process.env.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT) ||\n    DEFAULT_MAX_ENTRY_SIZE\n  );\n};\n"]}