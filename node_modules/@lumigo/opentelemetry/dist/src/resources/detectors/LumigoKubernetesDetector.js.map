{"version":3,"file":"LumigoKubernetesDetector.js","sourceRoot":"","sources":["../../../../src/resources/detectors/LumigoKubernetesDetector.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { readFile } from 'fs/promises';\nimport { logger } from '../../logging';\nimport { Detector, Resource, ResourceDetectionConfig } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\n\nconst POD_ID_LENGTH = 36;\nconst CONTAINER_ID_LENGTH = 64;\n\n/*\n * Detector for the Kubernetes Pod UUID, based on https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1489\n */\nexport class LumigoKubernetesDetector implements Detector {\n  async detect(_config?: ResourceDetectionConfig): Promise<Resource> {\n    try {\n      const hostFileContent = await readFile('/etc/hosts', {\n        flag: 'r',\n        encoding: 'utf8',\n      });\n\n      const hostFileFirstLine = String(hostFileContent).slice(0, hostFileContent.indexOf('\\n'));\n      if (!hostFileFirstLine.startsWith('# Kubernetes-managed hosts file')) {\n        throw new Error('File /etc/hosts does not seem managed by Kubernetes');\n      }\n    } catch (ex) {\n      logger.debug(\n        'LumigoKubernetesDetector does not think this process runs in a Kubernetes pod',\n        ex\n      );\n\n      return Resource.EMPTY;\n    }\n\n    let podId: string;\n\n    try {\n      podId = await get_kubenertes_pod_uid_v1();\n    } catch (err) {\n      try {\n        logger.debug(`No Pod UID v1 found: ${err}`);\n\n        podId = await get_kubenertes_pod_uid_v2();\n      } catch (err) {\n        logger.debug(`No Pod UID v2 found: ${err}`);\n      }\n    }\n\n    if (!podId) {\n      return Resource.EMPTY;\n    }\n\n    return new Resource({\n      [SemanticResourceAttributes.K8S_POD_UID]: podId,\n    });\n  }\n}\n\nconst get_kubenertes_pod_uid_v1 = async (): Promise<string> => {\n  const mountinfo = await readFile('/proc/self/mountinfo', {\n    flag: 'r',\n    encoding: 'utf8',\n  });\n\n  const podMountInfoEntry = mountinfo\n    .split('\\n')\n    .map((line) => line.trim())\n    .filter((line) => !!line)\n    .filter((line) => line.length > POD_ID_LENGTH)\n    .find((line) => line.indexOf('/pods/') > 0);\n\n  if (!podMountInfoEntry) {\n    return Promise.reject(new Error(\"No pod-like mountpoint found in '/proc/self/mountinfo'\"));\n  }\n\n  return podMountInfoEntry.split('/pods/')[1].substring(0, POD_ID_LENGTH);\n};\n\nconst get_kubenertes_pod_uid_v2 = async (): Promise<string> => {\n  const cgroups = await readFile('/proc/self/cgroup', {\n    flag: 'r',\n    encoding: 'utf8',\n  });\n\n  return cgroups\n    .split('\\n')\n    .map((line) => line.trim())\n    .filter((line) => !!line)\n    .filter((line) => line.length > CONTAINER_ID_LENGTH)\n    .map((line) => {\n      const segments = line.split('/');\n      if (\n        segments.length > 2 &&\n        segments[segments.length - 2].startsWith('pod') &&\n        segments[segments.length - 2].length === POD_ID_LENGTH + 3\n      ) {\n        return segments[segments.length - 2].substring(3, POD_ID_LENGTH + 3);\n      }\n\n      return segments[segments.length - 2];\n    })\n    .find((podId) => !!podId);\n};\n"]}